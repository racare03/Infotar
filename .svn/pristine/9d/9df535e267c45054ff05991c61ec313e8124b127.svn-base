package tests;

import org.testng.annotations.Test;

import pages.HomePage;
import pages.LoginPage;
import pages.MovimientosPage;

import org.testng.annotations.BeforeMethod;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;

public class TestMovimientosAdminGrupo {

	WebDriver driver;
	String PATH_DRIVER = "./drivers/chromedriver.exe";
	String TYPE_DRIVER = "webdriver.chrome.driver";
	String URL = "https://servicios-i.redsys.es:54443/infotar/";
	String usuario = "I00010009";
	String pass = "Prueba1234";
	
	LoginPage login;
	HomePage home;
	MovimientosPage movimientos;
	
	@BeforeMethod
	public void beforeMethod() {
		System.setProperty(TYPE_DRIVER, PATH_DRIVER);
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(URL);
		login = new LoginPage(driver);
	}
	
	@Test
	public void testNoGrupoNoEmpresa() {
		login.iniciarSesion(usuario, pass);
		home = new HomePage(driver);
		home.irMovimientos();
		movimientos = new MovimientosPage(driver);
		movimientos.clicarInforme();
		Assert.assertEquals("Debe seleccionar un valor para el grupo de empresa y para la empresa", movimientos.getMensaje());
		
		
	}
	
	@Test
	public void testMovimientos() {
		login.iniciarSesion(usuario, pass);
		home = new HomePage(driver);
		home.irMovimientos();
		movimientos = new MovimientosPage(driver);
		movimientos.selectEmpresa();
		movimientos.selectFechaOpDesde("2020/08/24");
		movimientos.selectFechaOpHasta("2020/08/29");
		movimientos.clicarInforme();
		Assert.assertEquals("GARCIA JUAN BANDERA", movimientos.getMovimientos());		
	}
	
	@Test
	public void testLimpiarFiltros() {
		login.iniciarSesion(usuario, pass);
		home = new HomePage(driver);
		home.irMovimientos();
		movimientos = new MovimientosPage(driver);
		movimientos.selectEmpresa();
		movimientos.selectFechaOpDesde("2020/08/24");
		movimientos.selectFechaOpHasta("2020/08/29");
		movimientos.clicarLimpiarFiltros();
		Assert.assertEquals("Seleccione una opción", movimientos.filtroLimpio());
	}
	
	@Test
	public void testSeleccionarFiltro() {
		login.iniciarSesion(usuario, pass);
		home = new HomePage(driver);
		home.irMovimientos();
		movimientos = new MovimientosPage(driver);
		movimientos.clicarVerFiltros();
		movimientos.clicarPrimerFiltro();
		movimientos.clicarAceptar();
		movimientos.clicarInforme();
		Assert.assertEquals("GARCIA JUAN BANDERA", movimientos.getMovimientos());
	}
	
	@Test
	public void testBorrarFiltro() {
		login.iniciarSesion(usuario, pass);
		home = new HomePage(driver);
		home.irMovimientos();
		movimientos = new MovimientosPage(driver);
		movimientos.clicarVerFiltros();
		movimientos.clicarBorrarFiltro();
		movimientos.clicarAceptarBorrar();
		Assert.assertEquals("Filtro eliminado con éxito", movimientos.textoBorrado());		
	}
	
	@Test
	public void testGuardarFiltro() {
		login.iniciarSesion(usuario, pass);
		home = new HomePage(driver);
		home.irMovimientos();
		movimientos = new MovimientosPage(driver);
		movimientos.selectEmpresa();
		movimientos.selectFechaOpDesde("2020/08/24");
		movimientos.selectFechaOpHasta("2020/08/29");
		movimientos.clicarInforme();
		movimientos.clicarGuardarFiltro();
		movimientos.ponerNombreFiltro("Filtro automatización");
		movimientos.clicarGuardar();
		Assert.assertEquals("Filtro guardado con éxito", movimientos.textoGuardado());
		
	}
	
	@Test
	public void testFiltroSinNombre() {
		login.iniciarSesion(usuario, pass);
		home = new HomePage(driver);
		home.irMovimientos();
		movimientos = new MovimientosPage(driver);
		movimientos.selectEmpresa();
		movimientos.clicarGuardarFiltro();
		movimientos.filtroSinNombre();
		movimientos.clicarGuardar();
		Assert.assertEquals("El nombre del filtro no puede estar vacío", movimientos.textoSinNombre());
		
	}
	
	
	
	@AfterMethod
	public void afterMethod() {
		driver.quit();
	}
}
